{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "DucklingScript",
	"scopeName": "source.ducklingscript",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#dollar-sign"
		},
		{
			"include": "#block-commands"
		},
		{
			"include": "#property-arg-evaluation"
		},
		{
			"include": "#property-evaluation"
		},
		{
			"include": "#file-evaluation"
		},
		{
			"include": "#number-evaluation"
		},
		{
			"include": "#from-command"
		},
		{
			"include": "#default-evaluation"
		},
		{
			"include": "#unevaluated"
		},
		{
			"include": "#other-commands"
		}
	],
	"repository": {
		"comments": {
			"name": "comment.block.dkls",
			"begin": "^(\\s*)REM\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)"
		},
		"dollar-sign": {
			"name": "keyword.control.dkls.dollar-sign",
			"begin": "^(\\s*)\\$[A-Z\\+\\-_]*\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#quoted-strings"},
				{"include": "#numbers"},
				{"include": "#operators"},
				{"include": "#language-constants"},
				{"include": "#properties"}
			]
		},
		"block-commands": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(IF|ELIF|ELSE|VAR|REPEAT|FOR|WHILE|FUNCTION|FUNC)\\s+",
			"end": "$",
			"patterns": [
				{"include": "#quoted-strings"},
				{"include": "#numbers"},
				{"include": "#operators"},
				{"include": "#language-constants"},
				{"include": "#properties"}
			]
		},
		"property-arg-evaluation": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(RUN)\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{
					"name": "support.type.property-name.dkls",
					"begin": "(?<!^)\\s\\b[a-zA-Z0-9_]+\\b",
					"end": "[\\s\\S]"
				},
				{"include": "#quoted-strings"},
				{"include": "#numbers"},
				{"include": "#operators"},
				{"include": "#language-constants"},
				{"include": "#properties"}
			]
		},
		"property-evaluation": {
			"name": "keyword.control.dkls.property-eval",
			"begin": "^(\\s*)(EXIST|NOTEXIST|NOT_EXIST)\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{
					"name": "variable.name.dkls",
					"match": "[A-Za-z_]\\w*"
				},
				{
					"name": "invalid.illegal.dkls",
					"match": ".*$"
				}
			]
		},
		"file-evaluation": {
			"name": "keyword.control.dkls.file-eval",
			"begin": "^(\\s*)(STARTENV|STARTCODE|START|IMPORT|EXPORT)\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{
					"name": "variable.other.dkls",
					"match": "[\\w\\.]+"
				},
				{
					"name": "invalid.illegal.dkls",
					"match": ".*$"
				}
			]
		},
		"number-evaluation": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(ALTCHAR)\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#numbers"}
			]
		},
		"from-command": {
			"name": "keyword.control.dkls",
			"begin": "(\\s*)(FROM)\\s+",
			"end": "$",
			"patterns": [
				{"include": "#properties"},
				{
					"name": "keyword.control.dkls",
					"begin": "(\\s*)(IMPORT)\\s+",
					"end": "$",
					"patterns": [
						{"include": "#properties"},
						{
							"name": "invalid.illegal.dkls",
							"match": ".*"
						}
					]
				},
				{
					"name": "invalid.illegal.dkls",
					"match": ".*"
				}
			]
		},
		"default-evaluation": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(DEFAULTSTRINGDELAY|DEFAULT_STRING_DELAY|STRINGDELAY|STRING_DELAY|DEFAULTDELAY|DEFAULT_DELAY|DELAY|RETURN|RET|VAR|WHITESPACE)\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#quoted-strings"},
				{"include": "#numbers"},
				{"include": "#operators"},
				{"include": "#language-constants"},
				{"include": "#properties"}
			]
		},
		"unevaluated": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(BREAKLOOP|BREAK_LOOP|CONTINUELOOP|CONTINUE_LOOP|CONTINUE|ENTER|MENU|PASS|UP|DOWN|LEFT|RIGHT|UPARROW|DOWNARROW|LEFTARROW|RIGHTARROW)\\s+",
			"end": "$",
			"patterns": [
				{
					"name": "invalid.illegal.dkls",
					"match": ".*"
				}
			]
		},
		"other-commands": {
			"name": "keyword.control.dkls.other-commands",
			"begin": "^(\\s*)[A-Z\\+\\-_]+\\s+",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#strings"}
			]
		},
		"strings": {
			"name": "string.quoted.double.dkls",
			"match": "."
		},
		"numbers": {
			"name": "constant.numeric.dkls",
			"match": "[0-9]+"
		},
		"properties": {
			"name": "variable.name.dkls",
			"match": "[A-Za-z_\\.]+"
		},
		"operators": {
			"name": "keyword.operator.dkls",
			"match": "(\\$|\\+|-|\\*|/|%|=|==|\\,)"
		},
		"quoted-strings": {
			"name": "string.quoted.double.dkls",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.dkls",
					"match": "\\\\."
				}
			]
		},
		"language-constants": {
			"name": "variable.language.dkls",
			"match": "(TRUE|FALSE)"
		}
	}
}