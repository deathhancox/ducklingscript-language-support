{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "DucklingScript",
	"scopeName": "source.ducklingscript",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#block-commands"
		},
		{
			"include": "#force-evaluated"
		},
		{
			"include": "#property-evaluation"
		},
		{
			"include": "#number-evaluation"
		},
		{
			"include": "#unevaluated"
		},
		{
			"include": "#default-evaluated"
		},
		{
			"include": "#other-commands"
		}
	],
	"repository": {
		"comments": {
			"name": "comment.block.dkls",
			"begin": "^(\\s*)REM\\b",
			"end": "^(?!\\1\\s)(?!\\s*$)"
		},
		"force-evaluated": {
			"name": "keyword.operator.new.dkls",
			"begin": "^(\\s*)\\$",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{
					"name": "keyword.control.dkls",
					"match": "[A-Z\\+\\-_]+\\b"
				},
				{"include": "#numbers"},
				{"include": "#operators"},
				{"include": "#properties"},
				{"include": "#quoted-strings"}
			]
		},
		"block-commands": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(IF|ELIF|ELSE|VAR|REPEAT|FOR|WHILE|FUNCTION|FUNC)\\b",
			"end": "$",
			"patterns": [
				{"include": "#numbers"},
				{"include": "#properties"},
				{"include": "#operators"},
				{"include": "#quoted-strings"}
			]
		},
		"property-evaluation": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(RUN|EXIST|NOTEXIST|NOT_EXIST)\\b",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#properties"}
			]
		},
		"number-evaluation": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(ALTCHAR)\\b",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#numbers"}
			]
		},
		"unevaluated": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(BREAKLOOP|BREAK_LOOP|CONTINUELOOP|CONTINUE_LOOP|CONTINUE|ENTER|MENU|PASS|UP|DOWN|LEFT|RIGHT|UPARROW|DOWNARROW|LEFTARROW|RIGHTARROW)\\b",
			"end": "$",
			"patterns": [
				{"include": "#all-invalid"}
			]
		},
		"default-evaluated": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)(DEFAULTSTRINGDELAY|DEFAULTSTRINGDELAY|DEFAULTDELAY|DEFAULT_DELAY|DELAY|RETURN|RET|VAR|WHITESPACE)\\b",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#numbers"},
				{"include": "#operators"},
				{"include": "#properties"},
				{"include": "#quoted-strings"}
			]
		},
		"other-commands": {
			"name": "keyword.control.dkls",
			"begin": "^(\\s*)[A-Z\\+\\-_]+\\b",
			"end": "^(?!\\1\\s)(?!\\s*$)",
			"patterns": [
				{"include": "#strings"}
			]
		},
		"strings": {
			"name": "string.quoted.double.dkls",
			"match": "."
		},
		"numbers": {
			"name": "constant.numeric.dkls",
			"match": "[0-9]+"
		},
		"properties": {
			"name": "support.type.property-name.dkls",
			"match": "\\$?[A-Za-z0-9_]"
		},
		"operators": {
			"name": "keyword.operator.new.dkls",
			"match": "(\\+|-|\\*|/|%|=|==|\\,)"
		},
		"quoted-strings": {
			"name": "string.quoted.double.dkls",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.dkls",
					"match": "\\\\."
				}
			]
		},
		"all-invalid": {
			"name": "invalid.illegal.dkls",
			"match": "."
		}
	}
}